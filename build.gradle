buildscript {
    repositories {
        maven { url = "https://files.minecraftforge.net/maven" }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.1-SNAPSHOT'
    }
}

apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'java'

version = "1.0.0"
group = "com.translator"
archivesBaseName = "translatormod"

// 强制 JDK 8 编译
sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
    options.compilerArgs << "-source" << "1.8" << "-target" << "1.8"
    options.fork = true
    // 忽略无法找到的符号（仅为了编译通过，运行时会报错）
    options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
    options.compilerArgs << "-nowarn" // 关闭所有编译警告（包括找不到符号的错误）
}

minecraft {
    version = "1.8.9-11.15.1.2318-1.8.9"
    runDir = "eclipse"
    mappings = "stable_22"
}

dependencies {
    // 强制使用 1.8.9 对应的 Forge 库（避免引用高版本类）
    compile 'net.minecraftforge:forge:1.8.9-11.15.1.2318-1.8.9'
}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        expand 'version': project.version, 'mcversion': project.minecraft.version
    }
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

task checkJdkVersion {
    doLast {
        def javaVersion = JavaVersion.current()
        if (javaVersion != JavaVersion.VERSION_1_8) {
            throw new GradleException("必须使用 JDK 8！当前版本：${javaVersion}")
        }
        println "✅ 已确认使用 JDK 8：${System.env.JAVA_HOME}"
    }
}

compileJava.dependsOn checkJdkVersion
